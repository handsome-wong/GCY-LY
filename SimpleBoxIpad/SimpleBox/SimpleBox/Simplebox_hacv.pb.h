// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

// @@protoc_insertion_point(imports)

@class ACParameterNotify;
@class ACParameterNotifyBuilder;
@class ACParameterSetReq;
@class ACParameterSetReqBuilder;
@class ConnectReq;
@class ConnectReqBuilder;
@class ConnectRsp;
@class ConnectRspBuilder;
@class SetRsp;
@class SetRspBuilder;


typedef NS_ENUM(SInt32, RspCode) {
  RspCodeFailed = 0,
  RspCodeSuccess = 1,
};

BOOL RspCodeIsValidValue(RspCode value);
NSString *NSStringFromRspCode(RspCode value);

typedef NS_ENUM(SInt32, ErrorCode) {
  ErrorCodeNormal = 0,
  ErrorCodeDataInvalid = 1,
  ErrorCodeDataEmpty = 2,
};

BOOL ErrorCodeIsValidValue(ErrorCode value);
NSString *NSStringFromErrorCode(ErrorCode value);

typedef NS_ENUM(SInt32, CycMode) {
  CycModeCycModeInside = 0,
  CycModeCycModeOuter = 1,
};

BOOL CycModeIsValidValue(CycMode value);
NSString *NSStringFromCycMode(CycMode value);

typedef NS_ENUM(SInt32, BlowMode) {
  BlowModeBlowFace = 0,
  BlowModeBlowFoot = 1,
  BlowModeBlowFaceFoot = 2,
  BlowModeBlowFootDefroest = 3,
};

BOOL BlowModeIsValidValue(BlowMode value);
NSString *NSStringFromBlowMode(BlowMode value);

typedef NS_ENUM(SInt32, WindOption) {
  WindOptionSpeedUp = 0,
  WindOptionSpeedDown = 1,
};

BOOL WindOptionIsValidValue(WindOption value);
NSString *NSStringFromWindOption(WindOption value);

typedef NS_ENUM(SInt32, TempOption) {
  TempOptionTempUp = 0,
  TempOptionTempDown = 1,
};

BOOL TempOptionIsValidValue(TempOption value);
NSString *NSStringFromTempOption(TempOption value);


@interface SimpleboxHacvRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

#define SetRsp_rspCode @"rspCode"
#define SetRsp_errorCode @"errorCode"
@interface SetRsp : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasRspCode_:1;
  BOOL hasErrorCode_:1;
  RspCode rspCode;
  ErrorCode errorCode;
}
- (BOOL) hasRspCode;
- (BOOL) hasErrorCode;
@property (readonly) RspCode rspCode;
@property (readonly) ErrorCode errorCode;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SetRspBuilder*) builder;
+ (SetRspBuilder*) builder;
+ (SetRspBuilder*) builderWithPrototype:(SetRsp*) prototype;
- (SetRspBuilder*) toBuilder;

+ (SetRsp*) parseFromData:(NSData*) data;
+ (SetRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SetRsp*) parseFromInputStream:(NSInputStream*) input;
+ (SetRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SetRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SetRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SetRspBuilder : PBGeneratedMessageBuilder {
@private
  SetRsp* resultSetRsp;
}

- (SetRsp*) defaultInstance;

- (SetRspBuilder*) clear;
- (SetRspBuilder*) clone;

- (SetRsp*) build;
- (SetRsp*) buildPartial;

- (SetRspBuilder*) mergeFrom:(SetRsp*) other;
- (SetRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SetRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRspCode;
- (RspCode) rspCode;
- (SetRspBuilder*) setRspCode:(RspCode) value;
- (SetRspBuilder*) clearRspCode;

- (BOOL) hasErrorCode;
- (ErrorCode) errorCode;
- (SetRspBuilder*) setErrorCode:(ErrorCode) value;
- (SetRspBuilder*) clearErrorCode;
@end

#define ACParameterNotify_OnOff @"onOff"
#define ACParameterNotify_acOpen @"acOpen"
#define ACParameterNotify_dualOpen @"dualOpen"
#define ACParameterNotify_autoOpen @"autoOpen"
#define ACParameterNotify_frontDefrost @"frontDefrost"
#define ACParameterNotify_backDefrost @"backDefrost"
#define ACParameterNotify_cycMode @"cycMode"
#define ACParameterNotify_blowMode @"blowMode"
#define ACParameterNotify_windSpeed @"windSpeed"
#define ACParameterNotify_temperature0 @"temperature0"
#define ACParameterNotify_temperature1 @"temperature1"
@interface ACParameterNotify : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasOnOff_:1;
  BOOL hasAcOpen_:1;
  BOOL hasDualOpen_:1;
  BOOL hasAutoOpen_:1;
  BOOL hasFrontDefrost_:1;
  BOOL hasBackDefrost_:1;
  BOOL hasWindSpeed_:1;
  BOOL hasTemperature0_:1;
  BOOL hasTemperature1_:1;
  BOOL hasCycMode_:1;
  BOOL hasBlowMode_:1;
  BOOL onOff_:1;
  BOOL acOpen_:1;
  BOOL dualOpen_:1;
  BOOL autoOpen_:1;
  BOOL frontDefrost_:1;
  BOOL backDefrost_:1;
  UInt32 windSpeed;
  UInt32 temperature0;
  UInt32 temperature1;
  CycMode cycMode;
  BlowMode blowMode;
}
- (BOOL) hasOnOff;
- (BOOL) hasAcOpen;
- (BOOL) hasDualOpen;
- (BOOL) hasAutoOpen;
- (BOOL) hasFrontDefrost;
- (BOOL) hasBackDefrost;
- (BOOL) hasCycMode;
- (BOOL) hasBlowMode;
- (BOOL) hasWindSpeed;
- (BOOL) hasTemperature0;
- (BOOL) hasTemperature1;
- (BOOL) onOff;
- (BOOL) acOpen;
- (BOOL) dualOpen;
- (BOOL) autoOpen;
- (BOOL) frontDefrost;
- (BOOL) backDefrost;
@property (readonly) CycMode cycMode;
@property (readonly) BlowMode blowMode;
@property (readonly) UInt32 windSpeed;
@property (readonly) UInt32 temperature0;
@property (readonly) UInt32 temperature1;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ACParameterNotifyBuilder*) builder;
+ (ACParameterNotifyBuilder*) builder;
+ (ACParameterNotifyBuilder*) builderWithPrototype:(ACParameterNotify*) prototype;
- (ACParameterNotifyBuilder*) toBuilder;

+ (ACParameterNotify*) parseFromData:(NSData*) data;
+ (ACParameterNotify*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ACParameterNotify*) parseFromInputStream:(NSInputStream*) input;
+ (ACParameterNotify*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ACParameterNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ACParameterNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ACParameterNotifyBuilder : PBGeneratedMessageBuilder {
@private
  ACParameterNotify* resultAcparameterNotify;
}

- (ACParameterNotify*) defaultInstance;

- (ACParameterNotifyBuilder*) clear;
- (ACParameterNotifyBuilder*) clone;

- (ACParameterNotify*) build;
- (ACParameterNotify*) buildPartial;

- (ACParameterNotifyBuilder*) mergeFrom:(ACParameterNotify*) other;
- (ACParameterNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ACParameterNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOnOff;
- (BOOL) onOff;
- (ACParameterNotifyBuilder*) setOnOff:(BOOL) value;
- (ACParameterNotifyBuilder*) clearOnOff;

- (BOOL) hasAcOpen;
- (BOOL) acOpen;
- (ACParameterNotifyBuilder*) setAcOpen:(BOOL) value;
- (ACParameterNotifyBuilder*) clearAcOpen;

- (BOOL) hasDualOpen;
- (BOOL) dualOpen;
- (ACParameterNotifyBuilder*) setDualOpen:(BOOL) value;
- (ACParameterNotifyBuilder*) clearDualOpen;

- (BOOL) hasAutoOpen;
- (BOOL) autoOpen;
- (ACParameterNotifyBuilder*) setAutoOpen:(BOOL) value;
- (ACParameterNotifyBuilder*) clearAutoOpen;

- (BOOL) hasFrontDefrost;
- (BOOL) frontDefrost;
- (ACParameterNotifyBuilder*) setFrontDefrost:(BOOL) value;
- (ACParameterNotifyBuilder*) clearFrontDefrost;

- (BOOL) hasBackDefrost;
- (BOOL) backDefrost;
- (ACParameterNotifyBuilder*) setBackDefrost:(BOOL) value;
- (ACParameterNotifyBuilder*) clearBackDefrost;

- (BOOL) hasCycMode;
- (CycMode) cycMode;
- (ACParameterNotifyBuilder*) setCycMode:(CycMode) value;
- (ACParameterNotifyBuilder*) clearCycMode;

- (BOOL) hasBlowMode;
- (BlowMode) blowMode;
- (ACParameterNotifyBuilder*) setBlowMode:(BlowMode) value;
- (ACParameterNotifyBuilder*) clearBlowMode;

- (BOOL) hasWindSpeed;
- (UInt32) windSpeed;
- (ACParameterNotifyBuilder*) setWindSpeed:(UInt32) value;
- (ACParameterNotifyBuilder*) clearWindSpeed;

- (BOOL) hasTemperature0;
- (UInt32) temperature0;
- (ACParameterNotifyBuilder*) setTemperature0:(UInt32) value;
- (ACParameterNotifyBuilder*) clearTemperature0;

- (BOOL) hasTemperature1;
- (UInt32) temperature1;
- (ACParameterNotifyBuilder*) setTemperature1:(UInt32) value;
- (ACParameterNotifyBuilder*) clearTemperature1;
@end

#define ACParameterSetReq_OnOff @"onOff"
#define ACParameterSetReq_ACOpen @"acopen"
#define ACParameterSetReq_AutoOpen @"autoOpen"
#define ACParameterSetReq_DualOpen @"dualOpen"
#define ACParameterSetReq_blowModeSwitch @"blowModeSwitch"
#define ACParameterSetReq_backDefrostSwitch @"backDefrostSwitch"
#define ACParameterSetReq_frontDefrostSwitch @"frontDefrostSwitch"
#define ACParameterSetReq_CycModeSwitch @"cycModeSwitch"
#define ACParameterSetReq_windOption @"windOption"
#define ACParameterSetReq_tempOption0 @"tempOption0"
#define ACParameterSetReq_tempOption1 @"tempOption1"
@interface ACParameterSetReq : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasOnOff_:1;
  BOOL hasAcopen_:1;
  BOOL hasAutoOpen_:1;
  BOOL hasDualOpen_:1;
  BOOL hasBlowModeSwitch_:1;
  BOOL hasBackDefrostSwitch_:1;
  BOOL hasFrontDefrostSwitch_:1;
  BOOL hasCycModeSwitch_:1;
  BOOL hasWindOption_:1;
  BOOL hasTempOption0_:1;
  BOOL hasTempOption1_:1;
  BOOL onOff_:1;
  BOOL acopen_:1;
  BOOL autoOpen_:1;
  BOOL dualOpen_:1;
  BOOL blowModeSwitch_:1;
  BOOL backDefrostSwitch_:1;
  BOOL frontDefrostSwitch_:1;
  BOOL cycModeSwitch_:1;
  WindOption windOption;
  TempOption tempOption0;
  TempOption tempOption1;
}
- (BOOL) hasOnOff;
- (BOOL) hasAcopen;
- (BOOL) hasAutoOpen;
- (BOOL) hasDualOpen;
- (BOOL) hasBlowModeSwitch;
- (BOOL) hasBackDefrostSwitch;
- (BOOL) hasFrontDefrostSwitch;
- (BOOL) hasCycModeSwitch;
- (BOOL) hasWindOption;
- (BOOL) hasTempOption0;
- (BOOL) hasTempOption1;
- (BOOL) onOff;
- (BOOL) acopen;
- (BOOL) autoOpen;
- (BOOL) dualOpen;
- (BOOL) blowModeSwitch;
- (BOOL) backDefrostSwitch;
- (BOOL) frontDefrostSwitch;
- (BOOL) cycModeSwitch;
@property (readonly) WindOption windOption;
@property (readonly) TempOption tempOption0;
@property (readonly) TempOption tempOption1;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ACParameterSetReqBuilder*) builder;
+ (ACParameterSetReqBuilder*) builder;
+ (ACParameterSetReqBuilder*) builderWithPrototype:(ACParameterSetReq*) prototype;
- (ACParameterSetReqBuilder*) toBuilder;

+ (ACParameterSetReq*) parseFromData:(NSData*) data;
+ (ACParameterSetReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ACParameterSetReq*) parseFromInputStream:(NSInputStream*) input;
+ (ACParameterSetReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ACParameterSetReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ACParameterSetReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ACParameterSetReqBuilder : PBGeneratedMessageBuilder {
@private
  ACParameterSetReq* resultAcparameterSetReq;
}

- (ACParameterSetReq*) defaultInstance;

- (ACParameterSetReqBuilder*) clear;
- (ACParameterSetReqBuilder*) clone;

- (ACParameterSetReq*) build;
- (ACParameterSetReq*) buildPartial;

- (ACParameterSetReqBuilder*) mergeFrom:(ACParameterSetReq*) other;
- (ACParameterSetReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ACParameterSetReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasOnOff;
- (BOOL) onOff;
- (ACParameterSetReqBuilder*) setOnOff:(BOOL) value;
- (ACParameterSetReqBuilder*) clearOnOff;

- (BOOL) hasAcopen;
- (BOOL) acopen;
- (ACParameterSetReqBuilder*) setAcopen:(BOOL) value;
- (ACParameterSetReqBuilder*) clearAcopen;

- (BOOL) hasAutoOpen;
- (BOOL) autoOpen;
- (ACParameterSetReqBuilder*) setAutoOpen:(BOOL) value;
- (ACParameterSetReqBuilder*) clearAutoOpen;

- (BOOL) hasDualOpen;
- (BOOL) dualOpen;
- (ACParameterSetReqBuilder*) setDualOpen:(BOOL) value;
- (ACParameterSetReqBuilder*) clearDualOpen;

- (BOOL) hasBlowModeSwitch;
- (BOOL) blowModeSwitch;
- (ACParameterSetReqBuilder*) setBlowModeSwitch:(BOOL) value;
- (ACParameterSetReqBuilder*) clearBlowModeSwitch;

- (BOOL) hasBackDefrostSwitch;
- (BOOL) backDefrostSwitch;
- (ACParameterSetReqBuilder*) setBackDefrostSwitch:(BOOL) value;
- (ACParameterSetReqBuilder*) clearBackDefrostSwitch;

- (BOOL) hasFrontDefrostSwitch;
- (BOOL) frontDefrostSwitch;
- (ACParameterSetReqBuilder*) setFrontDefrostSwitch:(BOOL) value;
- (ACParameterSetReqBuilder*) clearFrontDefrostSwitch;

- (BOOL) hasCycModeSwitch;
- (BOOL) cycModeSwitch;
- (ACParameterSetReqBuilder*) setCycModeSwitch:(BOOL) value;
- (ACParameterSetReqBuilder*) clearCycModeSwitch;

- (BOOL) hasWindOption;
- (WindOption) windOption;
- (ACParameterSetReqBuilder*) setWindOption:(WindOption) value;
- (ACParameterSetReqBuilder*) clearWindOption;

- (BOOL) hasTempOption0;
- (TempOption) tempOption0;
- (ACParameterSetReqBuilder*) setTempOption0:(TempOption) value;
- (ACParameterSetReqBuilder*) clearTempOption0;

- (BOOL) hasTempOption1;
- (TempOption) tempOption1;
- (ACParameterSetReqBuilder*) setTempOption1:(TempOption) value;
- (ACParameterSetReqBuilder*) clearTempOption1;
@end

#define ConnectReq_device_sn @"deviceSn"
#define ConnectReq_software_version @"softwareVersion"
@interface ConnectReq : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasDeviceSn_:1;
  BOOL hasSoftwareVersion_:1;
  NSString* deviceSn;
  NSString* softwareVersion;
}
- (BOOL) hasDeviceSn;
- (BOOL) hasSoftwareVersion;
@property (readonly, strong) NSString* deviceSn;
@property (readonly, strong) NSString* softwareVersion;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ConnectReqBuilder*) builder;
+ (ConnectReqBuilder*) builder;
+ (ConnectReqBuilder*) builderWithPrototype:(ConnectReq*) prototype;
- (ConnectReqBuilder*) toBuilder;

+ (ConnectReq*) parseFromData:(NSData*) data;
+ (ConnectReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ConnectReq*) parseFromInputStream:(NSInputStream*) input;
+ (ConnectReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ConnectReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ConnectReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ConnectReqBuilder : PBGeneratedMessageBuilder {
@private
  ConnectReq* resultConnectReq;
}

- (ConnectReq*) defaultInstance;

- (ConnectReqBuilder*) clear;
- (ConnectReqBuilder*) clone;

- (ConnectReq*) build;
- (ConnectReq*) buildPartial;

- (ConnectReqBuilder*) mergeFrom:(ConnectReq*) other;
- (ConnectReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ConnectReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDeviceSn;
- (NSString*) deviceSn;
- (ConnectReqBuilder*) setDeviceSn:(NSString*) value;
- (ConnectReqBuilder*) clearDeviceSn;

- (BOOL) hasSoftwareVersion;
- (NSString*) softwareVersion;
- (ConnectReqBuilder*) setSoftwareVersion:(NSString*) value;
- (ConnectReqBuilder*) clearSoftwareVersion;
@end

#define ConnectRsp_result @"result"
#define ConnectRsp_develop_id @"developId"
#define ConnectRsp_device_sn @"deviceSn"
#define ConnectRsp_software_version @"softwareVersion"
@interface ConnectRsp : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasDeviceSn_:1;
  BOOL hasSoftwareVersion_:1;
  BOOL hasDevelopId_:1;
  BOOL hasResult_:1;
  NSString* deviceSn;
  NSString* softwareVersion;
  UInt32 developId;
  RspCode result;
}
- (BOOL) hasResult;
- (BOOL) hasDevelopId;
- (BOOL) hasDeviceSn;
- (BOOL) hasSoftwareVersion;
@property (readonly) RspCode result;
@property (readonly) UInt32 developId;
@property (readonly, strong) NSString* deviceSn;
@property (readonly, strong) NSString* softwareVersion;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ConnectRspBuilder*) builder;
+ (ConnectRspBuilder*) builder;
+ (ConnectRspBuilder*) builderWithPrototype:(ConnectRsp*) prototype;
- (ConnectRspBuilder*) toBuilder;

+ (ConnectRsp*) parseFromData:(NSData*) data;
+ (ConnectRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ConnectRsp*) parseFromInputStream:(NSInputStream*) input;
+ (ConnectRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ConnectRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ConnectRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ConnectRspBuilder : PBGeneratedMessageBuilder {
@private
  ConnectRsp* resultConnectRsp;
}

- (ConnectRsp*) defaultInstance;

- (ConnectRspBuilder*) clear;
- (ConnectRspBuilder*) clone;

- (ConnectRsp*) build;
- (ConnectRsp*) buildPartial;

- (ConnectRspBuilder*) mergeFrom:(ConnectRsp*) other;
- (ConnectRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ConnectRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasResult;
- (RspCode) result;
- (ConnectRspBuilder*) setResult:(RspCode) value;
- (ConnectRspBuilder*) clearResult;

- (BOOL) hasDevelopId;
- (UInt32) developId;
- (ConnectRspBuilder*) setDevelopId:(UInt32) value;
- (ConnectRspBuilder*) clearDevelopId;

- (BOOL) hasDeviceSn;
- (NSString*) deviceSn;
- (ConnectRspBuilder*) setDeviceSn:(NSString*) value;
- (ConnectRspBuilder*) clearDeviceSn;

- (BOOL) hasSoftwareVersion;
- (NSString*) softwareVersion;
- (ConnectRspBuilder*) setSoftwareVersion:(NSString*) value;
- (ConnectRspBuilder*) clearSoftwareVersion;
@end


// @@protoc_insertion_point(global_scope)
